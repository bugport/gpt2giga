# Proxy settings
GPT2GIGA_HOST=0.0.0.0                   # Bind address (default: localhost)
GPT2GIGA_PORT=8090                      # Proxy port (default: 8090)
GPT2GIGA_PROXY_PORT=                    # Optional alias for port (handled by start script)
GPT2GIGA_USE_HTTPS=False                # Enable HTTPS for the proxy itself
GPT2GIGA_HTTPS_KEY_FILE=                # Path to proxy HTTPS key (if HTTPS enabled)
GPT2GIGA_HTTPS_CERT_FILE=               # Path to proxy HTTPS cert (if HTTPS enabled)
GPT2GIGA_LOG_LEVEL=INFO                 # CRITICAL|ERROR|WARNING|INFO|DEBUG
GPT2GIGA_PASS_MODEL=False               # Pass client model to backend
GPT2GIGA_PASS_TOKEN=False               # Forward client Authorization header
GPT2GIGA_EMBEDDINGS=EmbeddingsGigaR     # Model for /embeddings endpoint
GPT2GIGA_ENABLE_IMAGES=True             # Enable image forwarding
GPT2GIGA_TIMEOUT=600                    # Proxy request timeout (seconds)

# Streaming coalescing (passthrough by default)
GPT2GIGA_STREAM_COALESCE_BYTES=0        # Flush when buffered bytes >= N (0 disables)
GPT2GIGA_STREAM_COALESCE_MS=0           # Flush after idle N ms (0 disables)

# Backend (GigaChat-compatible) settings
GIGACHAT_BASE_URL=http://backend:8000/api/v1   # Backend base URL (http or https)
GIGACHAT_MODEL=GigaChat                        # Default chat model
GIGACHAT_AUTH_URL=                             # Optional auth service base URL (if backend requires)
GIGACHAT_SCOPE=GIGACHAT_API_PERS               # Scope (if your backend requires)
GIGACHAT_CREDENTIALS=                          # API key (if used)
GIGACHAT_USER=                                  # Optional login for auth flows
GIGACHAT_PASSWORD=                              # Optional password for auth flows
GIGACHAT_ACCESS_TOKEN=                          # Optional bearer token
GIGACHAT_PROFANITY_CHECK=False                  # Optional content filter flag
GIGACHAT_VERIFY_SSL_CERTS=False                 # Verify backend TLS certs (set True for HTTPS)
GIGACHAT_CA_BUNDLE_FILE=                        # CA bundle path for custom/self-signed CAs
GIGACHAT_MTLS_AUTH=False                        # Enable mTLS to backend
GIGACHAT_CERT_FILE=                             # Client certificate path (mTLS)
GIGACHAT_KEY_FILE=                              # Client key path (mTLS)
GIGACHAT_KEY_FILE_PASSWORD=                     # Client key password (optional)
GIGACHAT_TIMEOUT=30                             # Backend request timeout (seconds)

# Optional proxy-managed OAuth/JWT acquisition (Basic base64 â†’ token)
# If configured, the proxy will fetch JWT and inject it into backend settings,
# and auto-refresh on 401/expiry.
GPT2GIGA_AUTH_TOKEN_URL=                       # e.g. https://api.sbercloud.ru/gigachat/v1/oauth
GPT2GIGA_AUTH_BASIC_B64=                       # base64(CLIENT_ID:CLIENT_SECRET)
GPT2GIGA_AUTH_GRANT_TYPE=client_credentials    # leave empty to omit
GPT2GIGA_AUTH_SCOPE=GIGACHAT_API_PERS          # optional scope