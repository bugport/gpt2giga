; stunnel example configuration for embeddings traffic
; Copy to /etc/stunnel/stunnel.conf (or run with -f path/to/this.conf)

; Global
foreground = no
pid = /var/run/stunnel-embeddings.pid
output = /var/log/stunnel/stunnel-embeddings.log
; Reduce FIN_WAIT time when peers churn
TIMEOUTclose = 0

; Tune debug if needed (3â€“7)
debug = 4

; SERVICE: TLS terminator on 443 -> upstream plain HTTP on localhost:8090 (gpt2giga)
[embeddings]
client = no
accept = 0.0.0.0:443
connect = 127.0.0.1:8090

; Certificates
; Provide your fullchain and key
cert = /etc/stunnel/certs/fullchain.pem
key  = /etc/stunnel/certs/privkey.pem

; TCP tuning
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1
socket = l:SO_RCVBUF=1048576
socket = l:SO_SNDBUF=1048576
socket = r:SO_RCVBUF=1048576
socket = r:SO_SNDBUF=1048576

; TLS policy (modern)
sslVersion = TLSv1.2
options = NO_RENEGOTIATION
; If your OpenSSL supports TLSv1.3, prefer it and restrict cipher suites via ciphersuites
; ciphersuites = TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384

; Session cache to reduce full handshakes
sessionCacheSize = 50000
sessionCacheTimeout = 300

; Optional SNI if you need backend hostname routing
; sni = embeddings.example.com

; --- Client-side example (uncomment to use) ---
;[embeddings-client]
;client = yes
;accept = 127.0.0.1:8443
;connect = lb.example.com:443
;socket = l:TCP_NODELAY=1
;socket = r:TCP_NODELAY=1
;socket = l:SO_RCVBUF=1048576
;socket = l:SO_SNDBUF=1048576
;socket = r:SO_RCVBUF=1048576
;socket = r:SO_SNDBUF=1048576
;sslVersion = TLSv1.2
;options = NO_RENEGOTIATION
